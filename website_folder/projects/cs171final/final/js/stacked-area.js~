// SVG for stack graph
var splot = d3.select("#splot").insert("svg", ":first-child")
    .attr({
        width: width + margin.left + margin.right,
        height: height + margin.left + margin.right
    })
    .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

splot.append('rect')
    .attr("width", width - 2*margin.left)
    .attr("height", height - margin.top * 2)
    .attr("transform", "translate(" + (margin.left * 2)+ "," + margin.top + ")")
    .attr("fill", "#555555");
/*

//an array of arrays containing key-value objects of sources and funds per year
var res = [];

// Scales and axes
var yearScale = d3.scale.linear()
    .range([margin.left * 2, width]);

var fundScale = d3.scale.linear()
    .range([height, 2 * margin.bottom]);

var yearAxis = d3.svg.axis()
    .scale(yearScale)
    .orient("bottom")
    .tickValues([2005,2006,2007,2008,2009,2010,2011,2012,2013])
    .tickFormat(function(d) { return d });

var fundAxis = d3.svg.axis()
    .scale(fundScale)
    .orient("left");

// Stack layout
var stack = d3.layout.stack()
    .values(function(d) { return d.values; })
    .x(function(d) { return yearScale(d.date) })
    .y(function(d) { return d.value });

var color = d3.scale.ordinal()
    .range(colorbrewer.Reds[9]);

d3.csv("data/global-funding.csv", function(raw) {
    d3.map(raw.filter(function(d) { return d.Source !== "Total"}), function(d) {
        var o = {};
        o["name"] = d.Source;
        o["values"] = [];
        for (var yrs = 2005; yrs <= 2013; yrs++) {
            var u = {};
            u["label"] = yrs;
            u["name"] = d.Source;
            u["value"] = clean(d[yrs]);
            o["values"].push(u);
        }
        res.push(o);
    });

    var labelVar = "name";
    var varNames = d3.keys(res[0])
        .filter(function (key) { return key !== labelVar});

    color.domain(varNames);
    
    var area = d3.svg.area()
        .x(function(d) {return d.date})
        .y0(function(d) {return y2(d.y0)})
        .y1(function(d) {return y2(d.y0 + d.y)});

    // Axis things
    yearScale.domain([2005, 2013]);
    fundScale.domain([0, 2600]);

    stack(res);

    splot.append("g")
        .attr("class", "axis x-axis")
        .attr("transform", "translate(0," + (height - margin.bottom) + ")")
        .call(yearAxis);

    splot.append("g")
        .attr("class", "axis y-axis")
        .attr("transform", "translate(" + (margin.left * 2)+ "," + (-margin.bottom) + ")")
        .call(fundAxis);

    // area things
    var selection = splot.selectAll(".areas")
        .data(res)
        .enter().append("g")
        .attr("class", "areas")
        .attr("transform", "translate(0," + (-margin.bottom) + ")");

    var area = d3.svg.area()
        .x(function (d) { return yearScale(d.label) })
        .y0(function (d) { return fundScale(d.y0); })
        .y1(function (d) { return fundScale(d.y0 + d.y); });

    selection.append("path")
        .attr("class", "stackz")
        .attr("d", function(d) { return area(d.values) })
        .style("fill", function (d) { return color(d.name); })
        .style("stroke", "grey")

    var space = 8;
    splot.selectAll(".labels")
        .data(res)
        .enter().append("text")
        .attr({
            class: "labels",
            x: margin.left * 3,
            y: (function(d) { return --space * 25 }),
            "text-anchor": "start",
            fill: function(d) { return color(d.name); },
            "font-weight": "bold"
        })
        .html(function(d) { return d.name });
});

function clean(str) {
    str = str.replace("$", "");
    str = str.replace(" ", "");
    if (isNaN(parseFloat(str)))
        return 0;
    else return parseFloat(str);
}
*/
